# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu albert toggle

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:

    exec swayidle -w \
        timeout 300 'swaylock -f -c 000000' \
        timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
        before-sleep 'swaylock -f -c 000000'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration

   input type:touchpad {
       dwt enabled              # disable while typing
       tap enabled              # enables tap-to-click
       natural_scroll enabled
       middle_emulation enabled
   }

#   input "1267:12448:ELAN0709:00_04F3:30A0_Touchpad" {
#       tap enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload
    # restart sway inplace (preserves your layout/session, can be used to upgrade i3)
    bindsym $mod+Shift+r restart

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:

# Define names for default workspaces for which we configure key bindings later on.
    set $ws1 "1. Music 阮"
    set $ws2 "2. Web "
    set $ws3 "3. IDEs "
    set $ws4 "4. Terminal "
    set $ws5 "5. General "
    set $ws6 "6. Discord ﭮ "
    set $ws7 "7. Slack 聆"
    set $ws8 "8. Telegram "
    set $ws9 "9 Settings "
    set $ws10 "10"

    # Switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9
    bindsym $mod+Shift+0 move container to workspace $ws10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.


    # bind windows to workspaces
    assign [class="Spotify"] $ws1
    assign [class="Google-chrome"] $ws2
    assign [class="Firefox"] $ws2

    assign [class="jetbrains-idea"] $ws3
    assign [class="jetbrains-webstorm"] $ws3
    assign [class="jetbrains-studio"] $ws3
    assign [class="Code"] $ws3

    assign [class="kitty"] $ws4
    assign [class="discord"] $ws6
    assign [class="Slack"] $ws7
    assign [class="TelegramDesktop"] $ws8
    assign [class="Gnome-control-center"] $ws9
    assign [class="Blueberry.py"] $ws9
    assign [class="Pulseeffects"] $ws9


    # Setting default window states
    for_window [class="Google-chrome"] fullscreen enable
    for_window [class="Firefox"] fullscreen enable
    #for_window [class="Google-chrome"] bar mode hide

    # Allows the use of floating widows such as Albert
    for_window [class="Spotify"] fullscreen enable
    #for_window [class="Spotify"] bar mode hide

    for_window [class="discord"] fullscreen enable
    for_window [class="Slack"] fullscreen enable
    for_window [class="TelegramDesktop"] fullscreen enable
    for_window [class="^.*"] border none

# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+t layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+Escape move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+Escape scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
        position bottom

        status_command $HOME/.local/bin/bumblebee-status\
	-m dunstctl memory cpu  spotify pulseout pulsein indicator time todo ping\
	-p memory.format="{used} {percent:05.02f}%" indicator.include='capslock' time.format="%H:%M"\
	pulseaudio.autostart='true' todo.file="$HOME/TODO"\
	-a cpu indicator memory ping\
	-t night-powerline

	# -m Module
	# -p Parameters
	# -a AutoHide when not in critical | warning mode
	# -t Theme
}

include /etc/sway/config.d/*

exec --no-startup-id albert
exec --no-startup-id firefox
exec --no-startup-id kitty
exec --no-startup-id picom -f
exec --no-startup-id spotify
exec_always --no-startup-id dnf makecache
exec_always --no-startup-id autotiling
